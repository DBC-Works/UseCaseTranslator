//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace East.Tool.UseCaseTranslator.Resources {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("East.Tool.UseCaseTranslator.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Show help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CommandDescription_Help {
            get {
                return ResourceManager.GetString("CommandDescription_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Generate test suite Excel file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CommandDescription_TestSuite {
            get {
                return ResourceManager.GetString("CommandDescription_TestSuite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Translate to Markdown formatted document. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CommandDescription_UseCaseCatalog {
            get {
                return ResourceManager.GetString("CommandDescription_UseCaseCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   シナリオセットファイル{0}の書式に誤りがあります。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Exception_Format_InvalidScenarioSetFileFormat {
            get {
                return ResourceManager.GetString("Exception_Format_InvalidScenarioSetFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   シナリオセットファイルの指定に誤りがあります。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Exception_InvalidScenarioSetFileSpecification {
            get {
                return ResourceManager.GetString("Exception_InvalidScenarioSetFileSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ユースケーステンプレートの記述に誤りがあります。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Exception_RazorEngineTemplateCompilation {
            get {
                return ResourceManager.GetString("Exception_RazorEngineTemplateCompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   シナリオセットファイルが存在しません。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Exception_ScenarioSetFileNotFound {
            get {
                return ResourceManager.GetString("Exception_ScenarioSetFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0}-テストスイート.xlsx に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FileName_Format_TestSuiteExcel {
            get {
                return ResourceManager.GetString("FileName_Format_TestSuiteExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify apply template file(option) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HelpDescription_ApplyTemplate {
            get {
                return ResourceManager.GetString("HelpDescription_ApplyTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify source use case catalog file(requires) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HelpDescription_Input {
            get {
                return ResourceManager.GetString("HelpDescription_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specify output directory(option) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HelpDescription_Output {
            get {
                return ResourceManager.GetString("HelpDescription_Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   手動 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Action_Manual {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Action_Manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アクション に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseAction {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アクションNo に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseActionNo {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseActionNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   期待結果 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseExpected {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テストケース名 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseName {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   備考・説明 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseNote {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preconditions に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCasePreconditions {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCasePreconditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   結果 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseResult {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サマリー に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseSummary {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   実行種別 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Literal_TestSuite_Heading_TestCaseType {
            get {
                return ResourceManager.GetString("Literal_TestSuite_Heading_TestCaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Invalid parameter: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_InvalidParameter {
            get {
                return ResourceManager.GetString("Message_Format_InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Output directory is not found: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_NotExistOutputDirectory {
            get {
                return ResourceManager.GetString("Message_Format_NotExistOutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Test suite template excel file is not found: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_NotFoundExcelTemplate {
            get {
                return ResourceManager.GetString("Message_Format_NotFoundExcelTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Use case catalog is not found: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_NotFoundUseCaseCatalog {
            get {
                return ResourceManager.GetString("Message_Format_NotFoundUseCaseCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Use case template file is not found: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_NotFoundUseCaseTemplate {
            get {
                return ResourceManager.GetString("Message_Format_NotFoundUseCaseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write test suite csv catalog file to: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_WriteFileTo_TestSuiteCsv_Catalog {
            get {
                return ResourceManager.GetString("Message_Format_WriteFileTo_TestSuiteCsv_Catalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write test suite csv scenario set file to: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_WriteFileTo_TestSuiteCsv_ScenarioSet {
            get {
                return ResourceManager.GetString("Message_Format_WriteFileTo_TestSuiteCsv_ScenarioSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write test suite Excel file to: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_WriteFileTo_TestSuiteExcel {
            get {
                return ResourceManager.GetString("Message_Format_WriteFileTo_TestSuiteExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write use case catalog file to: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_WriteFileTo_UseCaseCatalog {
            get {
                return ResourceManager.GetString("Message_Format_WriteFileTo_UseCaseCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write use case scenario set file to: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_Format_WriteFileTo_UseCaseScenarioSet {
            get {
                return ResourceManager.GetString("Message_Format_WriteFileTo_UseCaseScenarioSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Parameter &quot;(--input | -i):[source use case catalog file]&quot; is required. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_InputParameterIsRequired {
            get {
                return ResourceManager.GetString("Message_InputParameterIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Parameter &quot;--apply | -a&quot; requires both use case catalog template file and use case scenario set template file(&quot;(--apply | -a):[use case catalog template file path]|[use case scenario set template file]&quot;). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_InvalidMarkdownTemlateParameter {
            get {
                return ResourceManager.GetString("Message_InvalidMarkdownTemlateParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Parameter &quot;--output | -o&quot; requires output directory path(&quot;(--output | -o):[output directory path]&quot;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Message_OutputParameterRequiresPath {
            get {
                return ResourceManager.GetString("Message_OutputParameterRequiresPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Byte[] のローカライズされたリソースを検索します。
        /// </summary>
        internal static byte[] テストスイートテンプレート {
            get {
                object obj = ResourceManager.GetObject("テストスイートテンプレート", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   @model East.Tool.UseCaseTranslator.Models.UseCaseCatalog
        ///# ユースケースシナリオカタログ - @Model.Title
        ///
        ///## 目次
        ///
        ///@foreach (var scenarioSet in Model.ScenarioSets) {
        ///@:* シナリオセット - @scenarioSet.Title
        ///	foreach (var scenario in scenarioSet.Scenarios) {
        ///@:    * @scenario.Title
        ///	}
        ///}
        ///
        ///@if (Model.UpdateHistory.Any()) {
        ///@:## 更新履歴
        ///	foreach (var updateInfo in Model.UpdateHistory) {
        ///@:
        ///@:### @(updateInfo.Title)(@updateInfo.Date)
        ///@:
        ///		if (updateInfo.Summaries.Count() == 1) {
        ///@:@updateInfo.Summaries.First()
        ///		}
        ///		els [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ユースケースカタログテンプレート {
            get {
                return ResourceManager.GetString("ユースケースカタログテンプレート", resourceCulture);
            }
        }
        
        /// <summary>
        ///   @model East.Tool.UseCaseTranslator.Models.UseCaseScenarioSet
        ///# シナリオセット - @Model.Title
        ///
        ///@Model.Summary
        ///
        ///## アクター
        ///
        ///### 主アクター
        ///
        ///@Model.MainActor
        ///
        ///### 副アクター
        ///
        ///@switch (Model.SubActors.Count()) {
        ///    case 0:
        ///@:(なし)
        ///        break;
        ///
        ///    case 1:
        ///@:@Model.SubActors.First()
        ///        break;
        ///
        ///    default:
        ///        foreach (var subActor in Model.SubActors) {
        ///@:* @subActor
        ///        }
        ///        break;
        ///}
        ///
        ///## シナリオ
        ///
        ///@foreach (var scenario in Model.Scenarios) {
        ///@:### @scenario.Title
        ///@:
        ///@:@scenario.Su [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ユースケースシナリオセットテンプレート {
            get {
                return ResourceManager.GetString("ユースケースシナリオセットテンプレート", resourceCulture);
            }
        }
    }
}
